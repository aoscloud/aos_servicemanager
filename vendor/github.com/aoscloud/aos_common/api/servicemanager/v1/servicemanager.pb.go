// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: servicemanager/v1/servicemanager.proto

package servicemanager

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []string `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{0}
}

func (x *Users) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type SMStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services []*ServiceStatus `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	Layers   []*LayerStatus   `protobuf:"bytes,2,rep,name=layers,proto3" json:"layers,omitempty"`
}

func (x *SMStatus) Reset() {
	*x = SMStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMStatus) ProtoMessage() {}

func (x *SMStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMStatus.ProtoReflect.Descriptor instead.
func (*SMStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{1}
}

func (x *SMStatus) GetServices() []*ServiceStatus {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *SMStatus) GetLayers() []*LayerStatus {
	if x != nil {
		return x.Layers
	}
	return nil
}

type BoardConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardConfig string `protobuf:"bytes,1,opt,name=board_config,json=boardConfig,proto3" json:"board_config,omitempty"`
}

func (x *BoardConfig) Reset() {
	*x = BoardConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoardConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardConfig) ProtoMessage() {}

func (x *BoardConfig) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardConfig.ProtoReflect.Descriptor instead.
func (*BoardConfig) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{2}
}

func (x *BoardConfig) GetBoardConfig() string {
	if x != nil {
		return x.BoardConfig
	}
	return ""
}

type BoardConfigStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorVersion string `protobuf:"bytes,1,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
}

func (x *BoardConfigStatus) Reset() {
	*x = BoardConfigStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoardConfigStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardConfigStatus) ProtoMessage() {}

func (x *BoardConfigStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardConfigStatus.ProtoReflect.Descriptor instead.
func (*BoardConfigStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{3}
}

func (x *BoardConfigStatus) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

type ServiceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId     string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	AosVersion    uint64 `protobuf:"varint,2,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	VendorVersion string `protobuf:"bytes,3,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	StateChecksum string `protobuf:"bytes,4,opt,name=state_checksum,json=stateChecksum,proto3" json:"state_checksum,omitempty"`
}

func (x *ServiceStatus) Reset() {
	*x = ServiceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatus) ProtoMessage() {}

func (x *ServiceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatus.ProtoReflect.Descriptor instead.
func (*ServiceStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceStatus) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceStatus) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *ServiceStatus) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

func (x *ServiceStatus) GetStateChecksum() string {
	if x != nil {
		return x.StateChecksum
	}
	return ""
}

type InstallServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users         *Users `protobuf:"bytes,1,opt,name=users,proto3" json:"users,omitempty"`
	Url           string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ServiceId     string `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ProviderId    string `protobuf:"bytes,4,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	AosVersion    uint64 `protobuf:"varint,5,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	VendorVersion string `protobuf:"bytes,6,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	AlertRules    string `protobuf:"bytes,7,opt,name=alert_rules,json=alertRules,proto3" json:"alert_rules,omitempty"`
	Description   string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Sha256        []byte `protobuf:"bytes,9,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Sha512        []byte `protobuf:"bytes,10,opt,name=sha512,proto3" json:"sha512,omitempty"`
	Size          uint64 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *InstallServiceRequest) Reset() {
	*x = InstallServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallServiceRequest) ProtoMessage() {}

func (x *InstallServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallServiceRequest.ProtoReflect.Descriptor instead.
func (*InstallServiceRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{5}
}

func (x *InstallServiceRequest) GetUsers() *Users {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *InstallServiceRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *InstallServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *InstallServiceRequest) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *InstallServiceRequest) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *InstallServiceRequest) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

func (x *InstallServiceRequest) GetAlertRules() string {
	if x != nil {
		return x.AlertRules
	}
	return ""
}

func (x *InstallServiceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstallServiceRequest) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

func (x *InstallServiceRequest) GetSha512() []byte {
	if x != nil {
		return x.Sha512
	}
	return nil
}

func (x *InstallServiceRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type RemoveServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users         *Users `protobuf:"bytes,1,opt,name=users,proto3" json:"users,omitempty"`
	ServiceId     string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	AosVersion    uint64 `protobuf:"varint,3,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	VendorVersion string `protobuf:"bytes,4,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
}

func (x *RemoveServiceRequest) Reset() {
	*x = RemoveServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServiceRequest) ProtoMessage() {}

func (x *RemoveServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveServiceRequest.ProtoReflect.Descriptor instead.
func (*RemoveServiceRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveServiceRequest) GetUsers() *Users {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *RemoveServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *RemoveServiceRequest) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *RemoveServiceRequest) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

type ServiceStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users     *Users `protobuf:"bytes,1,opt,name=users,proto3" json:"users,omitempty"`
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Default   bool   `protobuf:"varint,3,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *ServiceStateRequest) Reset() {
	*x = ServiceStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStateRequest) ProtoMessage() {}

func (x *ServiceStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStateRequest.ProtoReflect.Descriptor instead.
func (*ServiceStateRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{7}
}

func (x *ServiceStateRequest) GetUsers() *Users {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ServiceStateRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceStateRequest) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

type StateAcceptance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	ServiceId     string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	StateChecksum string `protobuf:"bytes,3,opt,name=state_checksum,json=stateChecksum,proto3" json:"state_checksum,omitempty"`
	Result        string `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	Reason        string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *StateAcceptance) Reset() {
	*x = StateAcceptance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateAcceptance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateAcceptance) ProtoMessage() {}

func (x *StateAcceptance) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateAcceptance.ProtoReflect.Descriptor instead.
func (*StateAcceptance) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{8}
}

func (x *StateAcceptance) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *StateAcceptance) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StateAcceptance) GetStateChecksum() string {
	if x != nil {
		return x.StateChecksum
	}
	return ""
}

func (x *StateAcceptance) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *StateAcceptance) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ServiceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users         *Users `protobuf:"bytes,1,opt,name=users,proto3" json:"users,omitempty"`
	ServiceId     string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	StateChecksum string `protobuf:"bytes,3,opt,name=state_checksum,json=stateChecksum,proto3" json:"state_checksum,omitempty"`
	State         []byte `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ServiceState) Reset() {
	*x = ServiceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceState) ProtoMessage() {}

func (x *ServiceState) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceState.ProtoReflect.Descriptor instead.
func (*ServiceState) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{9}
}

func (x *ServiceState) GetUsers() *Users {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ServiceState) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceState) GetStateChecksum() string {
	if x != nil {
		return x.StateChecksum
	}
	return ""
}

func (x *ServiceState) GetState() []byte {
	if x != nil {
		return x.State
	}
	return nil
}

type NewServiceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string        `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	ServiceState  *ServiceState `protobuf:"bytes,2,opt,name=service_state,json=serviceState,proto3" json:"service_state,omitempty"`
}

func (x *NewServiceState) Reset() {
	*x = NewServiceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewServiceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewServiceState) ProtoMessage() {}

func (x *NewServiceState) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewServiceState.ProtoReflect.Descriptor instead.
func (*NewServiceState) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{10}
}

func (x *NewServiceState) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *NewServiceState) GetServiceState() *ServiceState {
	if x != nil {
		return x.ServiceState
	}
	return nil
}

type OverrideEnvVarsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvVars []*OverrideEnvVar `protobuf:"bytes,1,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty"`
}

func (x *OverrideEnvVarsRequest) Reset() {
	*x = OverrideEnvVarsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideEnvVarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideEnvVarsRequest) ProtoMessage() {}

func (x *OverrideEnvVarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideEnvVarsRequest.ProtoReflect.Descriptor instead.
func (*OverrideEnvVarsRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{11}
}

func (x *OverrideEnvVarsRequest) GetEnvVars() []*OverrideEnvVar {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

type OverrideEnvVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string        `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	SubjectId string        `protobuf:"bytes,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	Vars      []*EnvVarInfo `protobuf:"bytes,3,rep,name=vars,proto3" json:"vars,omitempty"`
}

func (x *OverrideEnvVar) Reset() {
	*x = OverrideEnvVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideEnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideEnvVar) ProtoMessage() {}

func (x *OverrideEnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideEnvVar.ProtoReflect.Descriptor instead.
func (*OverrideEnvVar) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{12}
}

func (x *OverrideEnvVar) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *OverrideEnvVar) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *OverrideEnvVar) GetVars() []*EnvVarInfo {
	if x != nil {
		return x.Vars
	}
	return nil
}

type EnvVarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VarId    string               `protobuf:"bytes,1,opt,name=var_id,json=varId,proto3" json:"var_id,omitempty"`
	Variable string               `protobuf:"bytes,2,opt,name=variable,proto3" json:"variable,omitempty"`
	Ttl      *timestamp.Timestamp `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *EnvVarInfo) Reset() {
	*x = EnvVarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvVarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvVarInfo) ProtoMessage() {}

func (x *EnvVarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvVarInfo.ProtoReflect.Descriptor instead.
func (*EnvVarInfo) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{13}
}

func (x *EnvVarInfo) GetVarId() string {
	if x != nil {
		return x.VarId
	}
	return ""
}

func (x *EnvVarInfo) GetVariable() string {
	if x != nil {
		return x.Variable
	}
	return ""
}

func (x *EnvVarInfo) GetTtl() *timestamp.Timestamp {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type OverrideEnvVarStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvVarStatus []*EnvVarStatus `protobuf:"bytes,1,rep,name=env_var_status,json=envVarStatus,proto3" json:"env_var_status,omitempty"`
}

func (x *OverrideEnvVarStatus) Reset() {
	*x = OverrideEnvVarStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideEnvVarStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideEnvVarStatus) ProtoMessage() {}

func (x *OverrideEnvVarStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideEnvVarStatus.ProtoReflect.Descriptor instead.
func (*OverrideEnvVarStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{14}
}

func (x *OverrideEnvVarStatus) GetEnvVarStatus() []*EnvVarStatus {
	if x != nil {
		return x.EnvVarStatus
	}
	return nil
}

type EnvVarStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string       `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	SubjectId string       `protobuf:"bytes,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	VarStatus []*VarStatus `protobuf:"bytes,3,rep,name=var_status,json=varStatus,proto3" json:"var_status,omitempty"`
}

func (x *EnvVarStatus) Reset() {
	*x = EnvVarStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvVarStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvVarStatus) ProtoMessage() {}

func (x *EnvVarStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvVarStatus.ProtoReflect.Descriptor instead.
func (*EnvVarStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{15}
}

func (x *EnvVarStatus) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *EnvVarStatus) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *EnvVarStatus) GetVarStatus() []*VarStatus {
	if x != nil {
		return x.VarStatus
	}
	return nil
}

type VarStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VarId string `protobuf:"bytes,1,opt,name=var_id,json=varId,proto3" json:"var_id,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *VarStatus) Reset() {
	*x = VarStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarStatus) ProtoMessage() {}

func (x *VarStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarStatus.ProtoReflect.Descriptor instead.
func (*VarStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{16}
}

func (x *VarStatus) GetVarId() string {
	if x != nil {
		return x.VarId
	}
	return ""
}

func (x *VarStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LayerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LayerId       string `protobuf:"bytes,1,opt,name=layer_id,json=layerId,proto3" json:"layer_id,omitempty"`
	AosVersion    uint64 `protobuf:"varint,2,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	VendorVersion string `protobuf:"bytes,3,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	Digest        string `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *LayerStatus) Reset() {
	*x = LayerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerStatus) ProtoMessage() {}

func (x *LayerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerStatus.ProtoReflect.Descriptor instead.
func (*LayerStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{17}
}

func (x *LayerStatus) GetLayerId() string {
	if x != nil {
		return x.LayerId
	}
	return ""
}

func (x *LayerStatus) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *LayerStatus) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

func (x *LayerStatus) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type InstallLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	LayerId       string `protobuf:"bytes,2,opt,name=layer_id,json=layerId,proto3" json:"layer_id,omitempty"`
	AosVersion    uint64 `protobuf:"varint,3,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	VendorVersion string `protobuf:"bytes,4,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	Digest        string `protobuf:"bytes,5,opt,name=digest,proto3" json:"digest,omitempty"`
	Description   string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Sha256        []byte `protobuf:"bytes,7,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Sha512        []byte `protobuf:"bytes,8,opt,name=sha512,proto3" json:"sha512,omitempty"`
	Size          uint64 `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *InstallLayerRequest) Reset() {
	*x = InstallLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallLayerRequest) ProtoMessage() {}

func (x *InstallLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallLayerRequest.ProtoReflect.Descriptor instead.
func (*InstallLayerRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{18}
}

func (x *InstallLayerRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *InstallLayerRequest) GetLayerId() string {
	if x != nil {
		return x.LayerId
	}
	return ""
}

func (x *InstallLayerRequest) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *InstallLayerRequest) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

func (x *InstallLayerRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *InstallLayerRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstallLayerRequest) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

func (x *InstallLayerRequest) GetSha512() []byte {
	if x != nil {
		return x.Sha512
	}
	return nil
}

func (x *InstallLayerRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SMNotifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SMNotification:
	//	*SMNotifications_Monitoring
	//	*SMNotifications_Alert
	//	*SMNotifications_ServiceStateRequest
	//	*SMNotifications_NewServiceState
	//	*SMNotifications_Log
	SMNotification isSMNotifications_SMNotification `protobuf_oneof:"SMNotification"`
}

func (x *SMNotifications) Reset() {
	*x = SMNotifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMNotifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMNotifications) ProtoMessage() {}

func (x *SMNotifications) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMNotifications.ProtoReflect.Descriptor instead.
func (*SMNotifications) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{19}
}

func (m *SMNotifications) GetSMNotification() isSMNotifications_SMNotification {
	if m != nil {
		return m.SMNotification
	}
	return nil
}

func (x *SMNotifications) GetMonitoring() *Monitoring {
	if x, ok := x.GetSMNotification().(*SMNotifications_Monitoring); ok {
		return x.Monitoring
	}
	return nil
}

func (x *SMNotifications) GetAlert() *Alert {
	if x, ok := x.GetSMNotification().(*SMNotifications_Alert); ok {
		return x.Alert
	}
	return nil
}

func (x *SMNotifications) GetServiceStateRequest() *ServiceStateRequest {
	if x, ok := x.GetSMNotification().(*SMNotifications_ServiceStateRequest); ok {
		return x.ServiceStateRequest
	}
	return nil
}

func (x *SMNotifications) GetNewServiceState() *NewServiceState {
	if x, ok := x.GetSMNotification().(*SMNotifications_NewServiceState); ok {
		return x.NewServiceState
	}
	return nil
}

func (x *SMNotifications) GetLog() *LogData {
	if x, ok := x.GetSMNotification().(*SMNotifications_Log); ok {
		return x.Log
	}
	return nil
}

type isSMNotifications_SMNotification interface {
	isSMNotifications_SMNotification()
}

type SMNotifications_Monitoring struct {
	Monitoring *Monitoring `protobuf:"bytes,1,opt,name=monitoring,proto3,oneof"`
}

type SMNotifications_Alert struct {
	Alert *Alert `protobuf:"bytes,2,opt,name=alert,proto3,oneof"`
}

type SMNotifications_ServiceStateRequest struct {
	ServiceStateRequest *ServiceStateRequest `protobuf:"bytes,3,opt,name=service_state_request,json=serviceStateRequest,proto3,oneof"`
}

type SMNotifications_NewServiceState struct {
	NewServiceState *NewServiceState `protobuf:"bytes,4,opt,name=new_service_state,json=newServiceState,proto3,oneof"`
}

type SMNotifications_Log struct {
	Log *LogData `protobuf:"bytes,5,opt,name=log,proto3,oneof"`
}

func (*SMNotifications_Monitoring) isSMNotifications_SMNotification() {}

func (*SMNotifications_Alert) isSMNotifications_SMNotification() {}

func (*SMNotifications_ServiceStateRequest) isSMNotifications_SMNotification() {}

func (*SMNotifications_NewServiceState) isSMNotifications_SMNotification() {}

func (*SMNotifications_Log) isSMNotifications_SMNotification() {}

type Monitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SystemMonitoring  *SystemMonitoring    `protobuf:"bytes,2,opt,name=system_monitoring,json=systemMonitoring,proto3" json:"system_monitoring,omitempty"`
	ServiceMonitoring []*ServiceMonitoring `protobuf:"bytes,3,rep,name=service_monitoring,json=serviceMonitoring,proto3" json:"service_monitoring,omitempty"`
}

func (x *Monitoring) Reset() {
	*x = Monitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Monitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monitoring) ProtoMessage() {}

func (x *Monitoring) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monitoring.ProtoReflect.Descriptor instead.
func (*Monitoring) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{20}
}

func (x *Monitoring) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Monitoring) GetSystemMonitoring() *SystemMonitoring {
	if x != nil {
		return x.SystemMonitoring
	}
	return nil
}

func (x *Monitoring) GetServiceMonitoring() []*ServiceMonitoring {
	if x != nil {
		return x.ServiceMonitoring
	}
	return nil
}

type SystemMonitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ram        uint64 `protobuf:"varint,1,opt,name=ram,proto3" json:"ram,omitempty"`
	Cpu        uint64 `protobuf:"varint,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	UsedDisk   uint64 `protobuf:"varint,3,opt,name=used_disk,json=usedDisk,proto3" json:"used_disk,omitempty"`
	InTraffic  uint64 `protobuf:"varint,4,opt,name=in_traffic,json=inTraffic,proto3" json:"in_traffic,omitempty"`
	OutTraffic uint64 `protobuf:"varint,5,opt,name=out_traffic,json=outTraffic,proto3" json:"out_traffic,omitempty"`
}

func (x *SystemMonitoring) Reset() {
	*x = SystemMonitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMonitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMonitoring) ProtoMessage() {}

func (x *SystemMonitoring) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMonitoring.ProtoReflect.Descriptor instead.
func (*SystemMonitoring) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{21}
}

func (x *SystemMonitoring) GetRam() uint64 {
	if x != nil {
		return x.Ram
	}
	return 0
}

func (x *SystemMonitoring) GetCpu() uint64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *SystemMonitoring) GetUsedDisk() uint64 {
	if x != nil {
		return x.UsedDisk
	}
	return 0
}

func (x *SystemMonitoring) GetInTraffic() uint64 {
	if x != nil {
		return x.InTraffic
	}
	return 0
}

func (x *SystemMonitoring) GetOutTraffic() uint64 {
	if x != nil {
		return x.OutTraffic
	}
	return 0
}

type ServiceMonitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId  string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Ram        uint64 `protobuf:"varint,2,opt,name=ram,proto3" json:"ram,omitempty"`
	Cpu        uint64 `protobuf:"varint,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	UsedDisk   uint64 `protobuf:"varint,4,opt,name=used_disk,json=usedDisk,proto3" json:"used_disk,omitempty"`
	InTraffic  uint64 `protobuf:"varint,5,opt,name=in_traffic,json=inTraffic,proto3" json:"in_traffic,omitempty"`
	OutTraffic uint64 `protobuf:"varint,6,opt,name=out_traffic,json=outTraffic,proto3" json:"out_traffic,omitempty"`
}

func (x *ServiceMonitoring) Reset() {
	*x = ServiceMonitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMonitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMonitoring) ProtoMessage() {}

func (x *ServiceMonitoring) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMonitoring.ProtoReflect.Descriptor instead.
func (*ServiceMonitoring) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{22}
}

func (x *ServiceMonitoring) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceMonitoring) GetRam() uint64 {
	if x != nil {
		return x.Ram
	}
	return 0
}

func (x *ServiceMonitoring) GetCpu() uint64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ServiceMonitoring) GetUsedDisk() uint64 {
	if x != nil {
		return x.UsedDisk
	}
	return 0
}

func (x *ServiceMonitoring) GetInTraffic() uint64 {
	if x != nil {
		return x.InTraffic
	}
	return 0
}

func (x *ServiceMonitoring) GetOutTraffic() uint64 {
	if x != nil {
		return x.OutTraffic
	}
	return 0
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Tag        string               `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Source     string               `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	AosVersion uint64               `protobuf:"varint,4,opt,name=aosVersion,proto3" json:"aosVersion,omitempty"`
	// Types that are assignable to Payload:
	//	*Alert_ResourceAlert
	//	*Alert_ResourceValidateAlert
	//	*Alert_SystemAlert
	Payload isAlert_Payload `protobuf_oneof:"Payload"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{23}
}

func (x *Alert) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Alert) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Alert) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Alert) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (m *Alert) GetPayload() isAlert_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Alert) GetResourceAlert() *ResourceAlert {
	if x, ok := x.GetPayload().(*Alert_ResourceAlert); ok {
		return x.ResourceAlert
	}
	return nil
}

func (x *Alert) GetResourceValidateAlert() *ResourceValidateAlert {
	if x, ok := x.GetPayload().(*Alert_ResourceValidateAlert); ok {
		return x.ResourceValidateAlert
	}
	return nil
}

func (x *Alert) GetSystemAlert() *SystemAlert {
	if x, ok := x.GetPayload().(*Alert_SystemAlert); ok {
		return x.SystemAlert
	}
	return nil
}

type isAlert_Payload interface {
	isAlert_Payload()
}

type Alert_ResourceAlert struct {
	ResourceAlert *ResourceAlert `protobuf:"bytes,5,opt,name=resource_alert,json=resourceAlert,proto3,oneof"`
}

type Alert_ResourceValidateAlert struct {
	ResourceValidateAlert *ResourceValidateAlert `protobuf:"bytes,6,opt,name=resource_validate_alert,json=resourceValidateAlert,proto3,oneof"`
}

type Alert_SystemAlert struct {
	SystemAlert *SystemAlert `protobuf:"bytes,7,opt,name=system_alert,json=systemAlert,proto3,oneof"`
}

func (*Alert_ResourceAlert) isAlert_Payload() {}

func (*Alert_ResourceValidateAlert) isAlert_Payload() {}

func (*Alert_SystemAlert) isAlert_Payload() {}

type ResourceAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameter string `protobuf:"bytes,1,opt,name=parameter,proto3" json:"parameter,omitempty"`
	Value     uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ResourceAlert) Reset() {
	*x = ResourceAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceAlert) ProtoMessage() {}

func (x *ResourceAlert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceAlert.ProtoReflect.Descriptor instead.
func (*ResourceAlert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{24}
}

func (x *ResourceAlert) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

func (x *ResourceAlert) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ResourceValidateAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string                    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Errors []*ResourceValidateErrors `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ResourceValidateAlert) Reset() {
	*x = ResourceValidateAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceValidateAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceValidateAlert) ProtoMessage() {}

func (x *ResourceValidateAlert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceValidateAlert.ProtoReflect.Descriptor instead.
func (*ResourceValidateAlert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{25}
}

func (x *ResourceValidateAlert) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourceValidateAlert) GetErrors() []*ResourceValidateErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ResourceValidateErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ErrorMsg []string `protobuf:"bytes,2,rep,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *ResourceValidateErrors) Reset() {
	*x = ResourceValidateErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceValidateErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceValidateErrors) ProtoMessage() {}

func (x *ResourceValidateErrors) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceValidateErrors.ProtoReflect.Descriptor instead.
func (*ResourceValidateErrors) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{26}
}

func (x *ResourceValidateErrors) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceValidateErrors) GetErrorMsg() []string {
	if x != nil {
		return x.ErrorMsg
	}
	return nil
}

type SystemAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SystemAlert) Reset() {
	*x = SystemAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemAlert) ProtoMessage() {}

func (x *SystemAlert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemAlert.ProtoReflect.Descriptor instead.
func (*SystemAlert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{27}
}

func (x *SystemAlert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SystemLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId string               `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	From  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Till  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=till,proto3" json:"till,omitempty"`
}

func (x *SystemLogRequest) Reset() {
	*x = SystemLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemLogRequest) ProtoMessage() {}

func (x *SystemLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemLogRequest.ProtoReflect.Descriptor instead.
func (*SystemLogRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{28}
}

func (x *SystemLogRequest) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *SystemLogRequest) GetFrom() *timestamp.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *SystemLogRequest) GetTill() *timestamp.Timestamp {
	if x != nil {
		return x.Till
	}
	return nil
}

type ServiceLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId     string               `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	ServiceId string               `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	From      *timestamp.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Till      *timestamp.Timestamp `protobuf:"bytes,4,opt,name=till,proto3" json:"till,omitempty"`
}

func (x *ServiceLogRequest) Reset() {
	*x = ServiceLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceLogRequest) ProtoMessage() {}

func (x *ServiceLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceLogRequest.ProtoReflect.Descriptor instead.
func (*ServiceLogRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{29}
}

func (x *ServiceLogRequest) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *ServiceLogRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceLogRequest) GetFrom() *timestamp.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ServiceLogRequest) GetTill() *timestamp.Timestamp {
	if x != nil {
		return x.Till
	}
	return nil
}

type LogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId     string `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	PartCount uint64 `protobuf:"varint,2,opt,name=part_count,json=partCount,proto3" json:"part_count,omitempty"`
	Part      uint64 `protobuf:"varint,3,opt,name=part,proto3" json:"part,omitempty"`
	Data      []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Error     string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LogData) Reset() {
	*x = LogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogData) ProtoMessage() {}

func (x *LogData) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v1_servicemanager_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogData.ProtoReflect.Descriptor instead.
func (*LogData) Descriptor() ([]byte, []int) {
	return file_servicemanager_v1_servicemanager_proto_rawDescGZIP(), []int{30}
}

func (x *LogData) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *LogData) GetPartCount() uint64 {
	if x != nil {
		return x.PartCount
	}
	return 0
}

func (x *LogData) GetPart() uint64 {
	if x != nil {
		return x.Part
	}
	return 0
}

func (x *LogData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LogData) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_servicemanager_v1_servicemanager_proto protoreflect.FileDescriptor

var file_servicemanager_v1_servicemanager_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x05, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x08, 0x53, 0x4d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x0b, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3a, 0x0a,
	0x11, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6f,
	0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0xe8, 0x02, 0x0a, 0x15, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6f, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x35,
	0x31, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x7e, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x7e, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x56, 0x0a, 0x16, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e,
	0x76, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08,
	0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61,
	0x72, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x76,
	0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x76, 0x56, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x6d,
	0x0a, 0x0a, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06,
	0x76, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x2c, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x5d, 0x0a,
	0x14, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c,
	0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x89, 0x01, 0x0a,
	0x0c, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x76,
	0x61, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x76,
	0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x0b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x88, 0x02,
	0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x61, 0x35, 0x31, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x68,
	0x61, 0x35, 0x31, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xf6, 0x02, 0x0a, 0x0f, 0x53, 0x4d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x0a,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a,
	0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x12,
	0x5c, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a,
	0x11, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f,
	0x6e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2e, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x42,
	0x10, 0x0a, 0x0e, 0x53, 0x4d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xed, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x53, 0x0a, 0x12,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x11,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x64, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x5f, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x75, 0x74,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x22, 0xb3, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x72, 0x61, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x70, 0x75,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x22, 0x8a, 0x03,
	0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x62, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x48, 0x00, 0x52, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x43, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x6e, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22,
	0x48, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x6c, 0x22, 0xa9,
	0x01, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69,
	0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x6c, 0x22, 0x7d, 0x0a, 0x07, 0x4c, 0x6f,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x84, 0x0a, 0x0a, 0x09, 0x53, 0x4d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x4d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x00, 0x12, 0x5a, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x0e, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a,
	0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0f, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45,
	0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e,
	0x76, 0x56, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0c,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5a,
	0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x4d, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x67,
	0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_servicemanager_v1_servicemanager_proto_rawDescOnce sync.Once
	file_servicemanager_v1_servicemanager_proto_rawDescData = file_servicemanager_v1_servicemanager_proto_rawDesc
)

func file_servicemanager_v1_servicemanager_proto_rawDescGZIP() []byte {
	file_servicemanager_v1_servicemanager_proto_rawDescOnce.Do(func() {
		file_servicemanager_v1_servicemanager_proto_rawDescData = protoimpl.X.CompressGZIP(file_servicemanager_v1_servicemanager_proto_rawDescData)
	})
	return file_servicemanager_v1_servicemanager_proto_rawDescData
}

var file_servicemanager_v1_servicemanager_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_servicemanager_v1_servicemanager_proto_goTypes = []interface{}{
	(*Users)(nil),                  // 0: servicemanager.v1.Users
	(*SMStatus)(nil),               // 1: servicemanager.v1.SMStatus
	(*BoardConfig)(nil),            // 2: servicemanager.v1.BoardConfig
	(*BoardConfigStatus)(nil),      // 3: servicemanager.v1.BoardConfigStatus
	(*ServiceStatus)(nil),          // 4: servicemanager.v1.ServiceStatus
	(*InstallServiceRequest)(nil),  // 5: servicemanager.v1.InstallServiceRequest
	(*RemoveServiceRequest)(nil),   // 6: servicemanager.v1.RemoveServiceRequest
	(*ServiceStateRequest)(nil),    // 7: servicemanager.v1.ServiceStateRequest
	(*StateAcceptance)(nil),        // 8: servicemanager.v1.StateAcceptance
	(*ServiceState)(nil),           // 9: servicemanager.v1.ServiceState
	(*NewServiceState)(nil),        // 10: servicemanager.v1.NewServiceState
	(*OverrideEnvVarsRequest)(nil), // 11: servicemanager.v1.OverrideEnvVarsRequest
	(*OverrideEnvVar)(nil),         // 12: servicemanager.v1.OverrideEnvVar
	(*EnvVarInfo)(nil),             // 13: servicemanager.v1.EnvVarInfo
	(*OverrideEnvVarStatus)(nil),   // 14: servicemanager.v1.OverrideEnvVarStatus
	(*EnvVarStatus)(nil),           // 15: servicemanager.v1.EnvVarStatus
	(*VarStatus)(nil),              // 16: servicemanager.v1.VarStatus
	(*LayerStatus)(nil),            // 17: servicemanager.v1.LayerStatus
	(*InstallLayerRequest)(nil),    // 18: servicemanager.v1.InstallLayerRequest
	(*SMNotifications)(nil),        // 19: servicemanager.v1.SMNotifications
	(*Monitoring)(nil),             // 20: servicemanager.v1.Monitoring
	(*SystemMonitoring)(nil),       // 21: servicemanager.v1.SystemMonitoring
	(*ServiceMonitoring)(nil),      // 22: servicemanager.v1.ServiceMonitoring
	(*Alert)(nil),                  // 23: servicemanager.v1.Alert
	(*ResourceAlert)(nil),          // 24: servicemanager.v1.ResourceAlert
	(*ResourceValidateAlert)(nil),  // 25: servicemanager.v1.ResourceValidateAlert
	(*ResourceValidateErrors)(nil), // 26: servicemanager.v1.ResourceValidateErrors
	(*SystemAlert)(nil),            // 27: servicemanager.v1.SystemAlert
	(*SystemLogRequest)(nil),       // 28: servicemanager.v1.SystemLogRequest
	(*ServiceLogRequest)(nil),      // 29: servicemanager.v1.ServiceLogRequest
	(*LogData)(nil),                // 30: servicemanager.v1.LogData
	(*timestamp.Timestamp)(nil),    // 31: google.protobuf.Timestamp
	(*empty.Empty)(nil),            // 32: google.protobuf.Empty
}
var file_servicemanager_v1_servicemanager_proto_depIdxs = []int32{
	4,  // 0: servicemanager.v1.SMStatus.services:type_name -> servicemanager.v1.ServiceStatus
	17, // 1: servicemanager.v1.SMStatus.layers:type_name -> servicemanager.v1.LayerStatus
	0,  // 2: servicemanager.v1.InstallServiceRequest.users:type_name -> servicemanager.v1.Users
	0,  // 3: servicemanager.v1.RemoveServiceRequest.users:type_name -> servicemanager.v1.Users
	0,  // 4: servicemanager.v1.ServiceStateRequest.users:type_name -> servicemanager.v1.Users
	0,  // 5: servicemanager.v1.ServiceState.users:type_name -> servicemanager.v1.Users
	9,  // 6: servicemanager.v1.NewServiceState.service_state:type_name -> servicemanager.v1.ServiceState
	12, // 7: servicemanager.v1.OverrideEnvVarsRequest.env_vars:type_name -> servicemanager.v1.OverrideEnvVar
	13, // 8: servicemanager.v1.OverrideEnvVar.vars:type_name -> servicemanager.v1.EnvVarInfo
	31, // 9: servicemanager.v1.EnvVarInfo.ttl:type_name -> google.protobuf.Timestamp
	15, // 10: servicemanager.v1.OverrideEnvVarStatus.env_var_status:type_name -> servicemanager.v1.EnvVarStatus
	16, // 11: servicemanager.v1.EnvVarStatus.var_status:type_name -> servicemanager.v1.VarStatus
	20, // 12: servicemanager.v1.SMNotifications.monitoring:type_name -> servicemanager.v1.Monitoring
	23, // 13: servicemanager.v1.SMNotifications.alert:type_name -> servicemanager.v1.Alert
	7,  // 14: servicemanager.v1.SMNotifications.service_state_request:type_name -> servicemanager.v1.ServiceStateRequest
	10, // 15: servicemanager.v1.SMNotifications.new_service_state:type_name -> servicemanager.v1.NewServiceState
	30, // 16: servicemanager.v1.SMNotifications.log:type_name -> servicemanager.v1.LogData
	31, // 17: servicemanager.v1.Monitoring.timestamp:type_name -> google.protobuf.Timestamp
	21, // 18: servicemanager.v1.Monitoring.system_monitoring:type_name -> servicemanager.v1.SystemMonitoring
	22, // 19: servicemanager.v1.Monitoring.service_monitoring:type_name -> servicemanager.v1.ServiceMonitoring
	31, // 20: servicemanager.v1.Alert.timestamp:type_name -> google.protobuf.Timestamp
	24, // 21: servicemanager.v1.Alert.resource_alert:type_name -> servicemanager.v1.ResourceAlert
	25, // 22: servicemanager.v1.Alert.resource_validate_alert:type_name -> servicemanager.v1.ResourceValidateAlert
	27, // 23: servicemanager.v1.Alert.system_alert:type_name -> servicemanager.v1.SystemAlert
	26, // 24: servicemanager.v1.ResourceValidateAlert.errors:type_name -> servicemanager.v1.ResourceValidateErrors
	31, // 25: servicemanager.v1.SystemLogRequest.from:type_name -> google.protobuf.Timestamp
	31, // 26: servicemanager.v1.SystemLogRequest.till:type_name -> google.protobuf.Timestamp
	31, // 27: servicemanager.v1.ServiceLogRequest.from:type_name -> google.protobuf.Timestamp
	31, // 28: servicemanager.v1.ServiceLogRequest.till:type_name -> google.protobuf.Timestamp
	0,  // 29: servicemanager.v1.SMService.GetUsersStatus:input_type -> servicemanager.v1.Users
	32, // 30: servicemanager.v1.SMService.GetAllStatus:input_type -> google.protobuf.Empty
	32, // 31: servicemanager.v1.SMService.GetBoardConfigStatus:input_type -> google.protobuf.Empty
	2,  // 32: servicemanager.v1.SMService.CheckBoardConfig:input_type -> servicemanager.v1.BoardConfig
	2,  // 33: servicemanager.v1.SMService.SetBoardConfig:input_type -> servicemanager.v1.BoardConfig
	5,  // 34: servicemanager.v1.SMService.InstallService:input_type -> servicemanager.v1.InstallServiceRequest
	6,  // 35: servicemanager.v1.SMService.RemoveService:input_type -> servicemanager.v1.RemoveServiceRequest
	8,  // 36: servicemanager.v1.SMService.ServiceStateAcceptance:input_type -> servicemanager.v1.StateAcceptance
	9,  // 37: servicemanager.v1.SMService.SetServiceState:input_type -> servicemanager.v1.ServiceState
	11, // 38: servicemanager.v1.SMService.OverrideEnvVars:input_type -> servicemanager.v1.OverrideEnvVarsRequest
	18, // 39: servicemanager.v1.SMService.InstallLayer:input_type -> servicemanager.v1.InstallLayerRequest
	32, // 40: servicemanager.v1.SMService.SubscribeSMNotifications:input_type -> google.protobuf.Empty
	28, // 41: servicemanager.v1.SMService.GetSystemLog:input_type -> servicemanager.v1.SystemLogRequest
	29, // 42: servicemanager.v1.SMService.GetServiceLog:input_type -> servicemanager.v1.ServiceLogRequest
	29, // 43: servicemanager.v1.SMService.GetServiceCrashLog:input_type -> servicemanager.v1.ServiceLogRequest
	1,  // 44: servicemanager.v1.SMService.GetUsersStatus:output_type -> servicemanager.v1.SMStatus
	1,  // 45: servicemanager.v1.SMService.GetAllStatus:output_type -> servicemanager.v1.SMStatus
	3,  // 46: servicemanager.v1.SMService.GetBoardConfigStatus:output_type -> servicemanager.v1.BoardConfigStatus
	3,  // 47: servicemanager.v1.SMService.CheckBoardConfig:output_type -> servicemanager.v1.BoardConfigStatus
	32, // 48: servicemanager.v1.SMService.SetBoardConfig:output_type -> google.protobuf.Empty
	4,  // 49: servicemanager.v1.SMService.InstallService:output_type -> servicemanager.v1.ServiceStatus
	32, // 50: servicemanager.v1.SMService.RemoveService:output_type -> google.protobuf.Empty
	32, // 51: servicemanager.v1.SMService.ServiceStateAcceptance:output_type -> google.protobuf.Empty
	32, // 52: servicemanager.v1.SMService.SetServiceState:output_type -> google.protobuf.Empty
	14, // 53: servicemanager.v1.SMService.OverrideEnvVars:output_type -> servicemanager.v1.OverrideEnvVarStatus
	32, // 54: servicemanager.v1.SMService.InstallLayer:output_type -> google.protobuf.Empty
	19, // 55: servicemanager.v1.SMService.SubscribeSMNotifications:output_type -> servicemanager.v1.SMNotifications
	32, // 56: servicemanager.v1.SMService.GetSystemLog:output_type -> google.protobuf.Empty
	32, // 57: servicemanager.v1.SMService.GetServiceLog:output_type -> google.protobuf.Empty
	32, // 58: servicemanager.v1.SMService.GetServiceCrashLog:output_type -> google.protobuf.Empty
	44, // [44:59] is the sub-list for method output_type
	29, // [29:44] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_servicemanager_v1_servicemanager_proto_init() }
func file_servicemanager_v1_servicemanager_proto_init() {
	if File_servicemanager_v1_servicemanager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_servicemanager_v1_servicemanager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoardConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoardConfigStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateAcceptance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewServiceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideEnvVarsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideEnvVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvVarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideEnvVarStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvVarStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMNotifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Monitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMonitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMonitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceValidateAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceValidateErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v1_servicemanager_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_servicemanager_v1_servicemanager_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*SMNotifications_Monitoring)(nil),
		(*SMNotifications_Alert)(nil),
		(*SMNotifications_ServiceStateRequest)(nil),
		(*SMNotifications_NewServiceState)(nil),
		(*SMNotifications_Log)(nil),
	}
	file_servicemanager_v1_servicemanager_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*Alert_ResourceAlert)(nil),
		(*Alert_ResourceValidateAlert)(nil),
		(*Alert_SystemAlert)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_servicemanager_v1_servicemanager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_servicemanager_v1_servicemanager_proto_goTypes,
		DependencyIndexes: file_servicemanager_v1_servicemanager_proto_depIdxs,
		MessageInfos:      file_servicemanager_v1_servicemanager_proto_msgTypes,
	}.Build()
	File_servicemanager_v1_servicemanager_proto = out.File
	file_servicemanager_v1_servicemanager_proto_rawDesc = nil
	file_servicemanager_v1_servicemanager_proto_goTypes = nil
	file_servicemanager_v1_servicemanager_proto_depIdxs = nil
}
