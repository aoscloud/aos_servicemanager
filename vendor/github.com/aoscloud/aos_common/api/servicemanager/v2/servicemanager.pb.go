// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: servicemanager/v2/servicemanager.proto

package servicemanager

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BoardConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardConfig string `protobuf:"bytes,1,opt,name=board_config,json=boardConfig,proto3" json:"board_config,omitempty"`
}

func (x *BoardConfig) Reset() {
	*x = BoardConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoardConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardConfig) ProtoMessage() {}

func (x *BoardConfig) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardConfig.ProtoReflect.Descriptor instead.
func (*BoardConfig) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{0}
}

func (x *BoardConfig) GetBoardConfig() string {
	if x != nil {
		return x.BoardConfig
	}
	return ""
}

type BoardConfigStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorVersion string `protobuf:"bytes,1,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
}

func (x *BoardConfigStatus) Reset() {
	*x = BoardConfigStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoardConfigStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardConfigStatus) ProtoMessage() {}

func (x *BoardConfigStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardConfigStatus.ProtoReflect.Descriptor instead.
func (*BoardConfigStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{1}
}

func (x *BoardConfigStatus) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

type ServicesStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services []*ServiceStatus `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *ServicesStatus) Reset() {
	*x = ServicesStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicesStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesStatus) ProtoMessage() {}

func (x *ServicesStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesStatus.ProtoReflect.Descriptor instead.
func (*ServicesStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{2}
}

func (x *ServicesStatus) GetServices() []*ServiceStatus {
	if x != nil {
		return x.Services
	}
	return nil
}

type ServiceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId     string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	AosVersion    uint64 `protobuf:"varint,2,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	VendorVersion string `protobuf:"bytes,3,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	Cached        bool   `protobuf:"varint,4,opt,name=cached,proto3" json:"cached,omitempty"`
}

func (x *ServiceStatus) Reset() {
	*x = ServiceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatus) ProtoMessage() {}

func (x *ServiceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatus.ProtoReflect.Descriptor instead.
func (*ServiceStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceStatus) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceStatus) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *ServiceStatus) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

func (x *ServiceStatus) GetCached() bool {
	if x != nil {
		return x.Cached
	}
	return false
}

type InstallServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ServiceId     string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ProviderId    string `protobuf:"bytes,3,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	AosVersion    uint64 `protobuf:"varint,4,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	VendorVersion string `protobuf:"bytes,5,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	Description   string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Sha256        []byte `protobuf:"bytes,7,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Sha512        []byte `protobuf:"bytes,8,opt,name=sha512,proto3" json:"sha512,omitempty"`
	Size          uint64 `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *InstallServiceRequest) Reset() {
	*x = InstallServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallServiceRequest) ProtoMessage() {}

func (x *InstallServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallServiceRequest.ProtoReflect.Descriptor instead.
func (*InstallServiceRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{4}
}

func (x *InstallServiceRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *InstallServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *InstallServiceRequest) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *InstallServiceRequest) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *InstallServiceRequest) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

func (x *InstallServiceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstallServiceRequest) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

func (x *InstallServiceRequest) GetSha512() []byte {
	if x != nil {
		return x.Sha512
	}
	return nil
}

func (x *InstallServiceRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type RestoreServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId  string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	AosVersion uint64 `protobuf:"varint,2,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
}

func (x *RestoreServiceRequest) Reset() {
	*x = RestoreServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreServiceRequest) ProtoMessage() {}

func (x *RestoreServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreServiceRequest.ProtoReflect.Descriptor instead.
func (*RestoreServiceRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{5}
}

func (x *RestoreServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *RestoreServiceRequest) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

type RemoveServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *RemoveServiceRequest) Reset() {
	*x = RemoveServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServiceRequest) ProtoMessage() {}

func (x *RemoveServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveServiceRequest.ProtoReflect.Descriptor instead.
func (*RemoveServiceRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type RunInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId    string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	SubjectId    string `protobuf:"bytes,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	NumInstances uint64 `protobuf:"varint,3,opt,name=num_instances,json=numInstances,proto3" json:"num_instances,omitempty"`
}

func (x *RunInstanceRequest) Reset() {
	*x = RunInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInstanceRequest) ProtoMessage() {}

func (x *RunInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInstanceRequest.ProtoReflect.Descriptor instead.
func (*RunInstanceRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{7}
}

func (x *RunInstanceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *RunInstanceRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *RunInstanceRequest) GetNumInstances() uint64 {
	if x != nil {
		return x.NumInstances
	}
	return 0
}

type RunInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []*RunInstanceRequest `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *RunInstancesRequest) Reset() {
	*x = RunInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInstancesRequest) ProtoMessage() {}

func (x *RunInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInstancesRequest.ProtoReflect.Descriptor instead.
func (*RunInstancesRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{8}
}

func (x *RunInstancesRequest) GetInstances() []*RunInstanceRequest {
	if x != nil {
		return x.Instances
	}
	return nil
}

type InstanceIdent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	SubjectId string `protobuf:"bytes,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	Instance  int64  `protobuf:"varint,3,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *InstanceIdent) Reset() {
	*x = InstanceIdent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceIdent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceIdent) ProtoMessage() {}

func (x *InstanceIdent) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceIdent.ProtoReflect.Descriptor instead.
func (*InstanceIdent) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{9}
}

func (x *InstanceIdent) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *InstanceIdent) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *InstanceIdent) GetInstance() int64 {
	if x != nil {
		return x.Instance
	}
	return 0
}

type InstanceStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *InstanceIdent `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	Default  bool           `protobuf:"varint,2,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *InstanceStateRequest) Reset() {
	*x = InstanceStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceStateRequest) ProtoMessage() {}

func (x *InstanceStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceStateRequest.ProtoReflect.Descriptor instead.
func (*InstanceStateRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{10}
}

func (x *InstanceStateRequest) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *InstanceStateRequest) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

type StateAcceptance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance      *InstanceIdent `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	StateChecksum string         `protobuf:"bytes,2,opt,name=state_checksum,json=stateChecksum,proto3" json:"state_checksum,omitempty"`
	Result        string         `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Reason        string         `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *StateAcceptance) Reset() {
	*x = StateAcceptance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateAcceptance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateAcceptance) ProtoMessage() {}

func (x *StateAcceptance) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateAcceptance.ProtoReflect.Descriptor instead.
func (*StateAcceptance) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{11}
}

func (x *StateAcceptance) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *StateAcceptance) GetStateChecksum() string {
	if x != nil {
		return x.StateChecksum
	}
	return ""
}

func (x *StateAcceptance) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *StateAcceptance) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type InstanceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance      *InstanceIdent `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	StateChecksum string         `protobuf:"bytes,2,opt,name=state_checksum,json=stateChecksum,proto3" json:"state_checksum,omitempty"`
	State         []byte         `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *InstanceState) Reset() {
	*x = InstanceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceState) ProtoMessage() {}

func (x *InstanceState) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceState.ProtoReflect.Descriptor instead.
func (*InstanceState) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{12}
}

func (x *InstanceState) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *InstanceState) GetStateChecksum() string {
	if x != nil {
		return x.StateChecksum
	}
	return ""
}

func (x *InstanceState) GetState() []byte {
	if x != nil {
		return x.State
	}
	return nil
}

type NewInstanceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *InstanceState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *NewInstanceState) Reset() {
	*x = NewInstanceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewInstanceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewInstanceState) ProtoMessage() {}

func (x *NewInstanceState) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewInstanceState.ProtoReflect.Descriptor instead.
func (*NewInstanceState) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{13}
}

func (x *NewInstanceState) GetState() *InstanceState {
	if x != nil {
		return x.State
	}
	return nil
}

type OverrideEnvVarsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvVars []*OverrideInstanceEnvVar `protobuf:"bytes,1,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty"`
}

func (x *OverrideEnvVarsRequest) Reset() {
	*x = OverrideEnvVarsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideEnvVarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideEnvVarsRequest) ProtoMessage() {}

func (x *OverrideEnvVarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideEnvVarsRequest.ProtoReflect.Descriptor instead.
func (*OverrideEnvVarsRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{14}
}

func (x *OverrideEnvVarsRequest) GetEnvVars() []*OverrideInstanceEnvVar {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

type OverrideInstanceEnvVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *InstanceIdent `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	Vars     []*EnvVarInfo  `protobuf:"bytes,2,rep,name=vars,proto3" json:"vars,omitempty"`
}

func (x *OverrideInstanceEnvVar) Reset() {
	*x = OverrideInstanceEnvVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideInstanceEnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideInstanceEnvVar) ProtoMessage() {}

func (x *OverrideInstanceEnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideInstanceEnvVar.ProtoReflect.Descriptor instead.
func (*OverrideInstanceEnvVar) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{15}
}

func (x *OverrideInstanceEnvVar) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *OverrideInstanceEnvVar) GetVars() []*EnvVarInfo {
	if x != nil {
		return x.Vars
	}
	return nil
}

type EnvVarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VarId    string               `protobuf:"bytes,1,opt,name=var_id,json=varId,proto3" json:"var_id,omitempty"`
	Variable string               `protobuf:"bytes,2,opt,name=variable,proto3" json:"variable,omitempty"`
	Ttl      *timestamp.Timestamp `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *EnvVarInfo) Reset() {
	*x = EnvVarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvVarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvVarInfo) ProtoMessage() {}

func (x *EnvVarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvVarInfo.ProtoReflect.Descriptor instead.
func (*EnvVarInfo) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{16}
}

func (x *EnvVarInfo) GetVarId() string {
	if x != nil {
		return x.VarId
	}
	return ""
}

func (x *EnvVarInfo) GetVariable() string {
	if x != nil {
		return x.Variable
	}
	return ""
}

func (x *EnvVarInfo) GetTtl() *timestamp.Timestamp {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type OverrideEnvVarStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvVarsStatus []*EnvVarInstanceStatus `protobuf:"bytes,1,rep,name=env_vars_status,json=envVarsStatus,proto3" json:"env_vars_status,omitempty"`
}

func (x *OverrideEnvVarStatus) Reset() {
	*x = OverrideEnvVarStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideEnvVarStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideEnvVarStatus) ProtoMessage() {}

func (x *OverrideEnvVarStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideEnvVarStatus.ProtoReflect.Descriptor instead.
func (*OverrideEnvVarStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{17}
}

func (x *OverrideEnvVarStatus) GetEnvVarsStatus() []*EnvVarInstanceStatus {
	if x != nil {
		return x.EnvVarsStatus
	}
	return nil
}

type EnvVarInstanceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance   *InstanceIdent  `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	VarsStatus []*EnvVarStatus `protobuf:"bytes,2,rep,name=vars_status,json=varsStatus,proto3" json:"vars_status,omitempty"`
}

func (x *EnvVarInstanceStatus) Reset() {
	*x = EnvVarInstanceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvVarInstanceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvVarInstanceStatus) ProtoMessage() {}

func (x *EnvVarInstanceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvVarInstanceStatus.ProtoReflect.Descriptor instead.
func (*EnvVarInstanceStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{18}
}

func (x *EnvVarInstanceStatus) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *EnvVarInstanceStatus) GetVarsStatus() []*EnvVarStatus {
	if x != nil {
		return x.VarsStatus
	}
	return nil
}

type EnvVarStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VarId string `protobuf:"bytes,1,opt,name=var_id,json=varId,proto3" json:"var_id,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EnvVarStatus) Reset() {
	*x = EnvVarStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvVarStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvVarStatus) ProtoMessage() {}

func (x *EnvVarStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvVarStatus.ProtoReflect.Descriptor instead.
func (*EnvVarStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{19}
}

func (x *EnvVarStatus) GetVarId() string {
	if x != nil {
		return x.VarId
	}
	return ""
}

func (x *EnvVarStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LayersStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layers []*LayerStatus `protobuf:"bytes,1,rep,name=layers,proto3" json:"layers,omitempty"`
}

func (x *LayersStatus) Reset() {
	*x = LayersStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayersStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayersStatus) ProtoMessage() {}

func (x *LayersStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayersStatus.ProtoReflect.Descriptor instead.
func (*LayersStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{20}
}

func (x *LayersStatus) GetLayers() []*LayerStatus {
	if x != nil {
		return x.Layers
	}
	return nil
}

type LayerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LayerId       string `protobuf:"bytes,1,opt,name=layer_id,json=layerId,proto3" json:"layer_id,omitempty"`
	AosVersion    uint64 `protobuf:"varint,2,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	VendorVersion string `protobuf:"bytes,3,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	Digest        string `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	Cached        bool   `protobuf:"varint,5,opt,name=cached,proto3" json:"cached,omitempty"`
}

func (x *LayerStatus) Reset() {
	*x = LayerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerStatus) ProtoMessage() {}

func (x *LayerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerStatus.ProtoReflect.Descriptor instead.
func (*LayerStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{21}
}

func (x *LayerStatus) GetLayerId() string {
	if x != nil {
		return x.LayerId
	}
	return ""
}

func (x *LayerStatus) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *LayerStatus) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

func (x *LayerStatus) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *LayerStatus) GetCached() bool {
	if x != nil {
		return x.Cached
	}
	return false
}

type InstallLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	LayerId       string `protobuf:"bytes,2,opt,name=layer_id,json=layerId,proto3" json:"layer_id,omitempty"`
	AosVersion    uint64 `protobuf:"varint,3,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	VendorVersion string `protobuf:"bytes,4,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	Digest        string `protobuf:"bytes,5,opt,name=digest,proto3" json:"digest,omitempty"`
	Description   string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Sha256        []byte `protobuf:"bytes,7,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Sha512        []byte `protobuf:"bytes,8,opt,name=sha512,proto3" json:"sha512,omitempty"`
	Size          uint64 `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *InstallLayerRequest) Reset() {
	*x = InstallLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallLayerRequest) ProtoMessage() {}

func (x *InstallLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallLayerRequest.ProtoReflect.Descriptor instead.
func (*InstallLayerRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{22}
}

func (x *InstallLayerRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *InstallLayerRequest) GetLayerId() string {
	if x != nil {
		return x.LayerId
	}
	return ""
}

func (x *InstallLayerRequest) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *InstallLayerRequest) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

func (x *InstallLayerRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *InstallLayerRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstallLayerRequest) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

func (x *InstallLayerRequest) GetSha512() []byte {
	if x != nil {
		return x.Sha512
	}
	return nil
}

func (x *InstallLayerRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type RemoveLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest string `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *RemoveLayerRequest) Reset() {
	*x = RemoveLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLayerRequest) ProtoMessage() {}

func (x *RemoveLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLayerRequest.ProtoReflect.Descriptor instead.
func (*RemoveLayerRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveLayerRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type RestoreLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest string `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *RestoreLayerRequest) Reset() {
	*x = RestoreLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreLayerRequest) ProtoMessage() {}

func (x *RestoreLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreLayerRequest.ProtoReflect.Descriptor instead.
func (*RestoreLayerRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{24}
}

func (x *RestoreLayerRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type SMNotifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SMNotification:
	//	*SMNotifications_Monitoring
	//	*SMNotifications_Alert
	//	*SMNotifications_InstanceStateRequest
	//	*SMNotifications_NewInstanceState
	//	*SMNotifications_Log
	//	*SMNotifications_RunInstancesStatus
	//	*SMNotifications_UpdateInstancesStatus
	SMNotification isSMNotifications_SMNotification `protobuf_oneof:"SMNotification"`
}

func (x *SMNotifications) Reset() {
	*x = SMNotifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMNotifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMNotifications) ProtoMessage() {}

func (x *SMNotifications) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMNotifications.ProtoReflect.Descriptor instead.
func (*SMNotifications) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{25}
}

func (m *SMNotifications) GetSMNotification() isSMNotifications_SMNotification {
	if m != nil {
		return m.SMNotification
	}
	return nil
}

func (x *SMNotifications) GetMonitoring() *Monitoring {
	if x, ok := x.GetSMNotification().(*SMNotifications_Monitoring); ok {
		return x.Monitoring
	}
	return nil
}

func (x *SMNotifications) GetAlert() *Alert {
	if x, ok := x.GetSMNotification().(*SMNotifications_Alert); ok {
		return x.Alert
	}
	return nil
}

func (x *SMNotifications) GetInstanceStateRequest() *InstanceStateRequest {
	if x, ok := x.GetSMNotification().(*SMNotifications_InstanceStateRequest); ok {
		return x.InstanceStateRequest
	}
	return nil
}

func (x *SMNotifications) GetNewInstanceState() *NewInstanceState {
	if x, ok := x.GetSMNotification().(*SMNotifications_NewInstanceState); ok {
		return x.NewInstanceState
	}
	return nil
}

func (x *SMNotifications) GetLog() *LogData {
	if x, ok := x.GetSMNotification().(*SMNotifications_Log); ok {
		return x.Log
	}
	return nil
}

func (x *SMNotifications) GetRunInstancesStatus() *RunInstancesStatus {
	if x, ok := x.GetSMNotification().(*SMNotifications_RunInstancesStatus); ok {
		return x.RunInstancesStatus
	}
	return nil
}

func (x *SMNotifications) GetUpdateInstancesStatus() *UpdateInstancesStatus {
	if x, ok := x.GetSMNotification().(*SMNotifications_UpdateInstancesStatus); ok {
		return x.UpdateInstancesStatus
	}
	return nil
}

type isSMNotifications_SMNotification interface {
	isSMNotifications_SMNotification()
}

type SMNotifications_Monitoring struct {
	Monitoring *Monitoring `protobuf:"bytes,1,opt,name=monitoring,proto3,oneof"`
}

type SMNotifications_Alert struct {
	Alert *Alert `protobuf:"bytes,2,opt,name=alert,proto3,oneof"`
}

type SMNotifications_InstanceStateRequest struct {
	InstanceStateRequest *InstanceStateRequest `protobuf:"bytes,3,opt,name=instance_state_request,json=instanceStateRequest,proto3,oneof"`
}

type SMNotifications_NewInstanceState struct {
	NewInstanceState *NewInstanceState `protobuf:"bytes,4,opt,name=new_instance_state,json=newInstanceState,proto3,oneof"`
}

type SMNotifications_Log struct {
	Log *LogData `protobuf:"bytes,5,opt,name=log,proto3,oneof"`
}

type SMNotifications_RunInstancesStatus struct {
	RunInstancesStatus *RunInstancesStatus `protobuf:"bytes,6,opt,name=run_instances_status,json=runInstancesStatus,proto3,oneof"`
}

type SMNotifications_UpdateInstancesStatus struct {
	UpdateInstancesStatus *UpdateInstancesStatus `protobuf:"bytes,7,opt,name=update_instances_status,json=updateInstancesStatus,proto3,oneof"`
}

func (*SMNotifications_Monitoring) isSMNotifications_SMNotification() {}

func (*SMNotifications_Alert) isSMNotifications_SMNotification() {}

func (*SMNotifications_InstanceStateRequest) isSMNotifications_SMNotification() {}

func (*SMNotifications_NewInstanceState) isSMNotifications_SMNotification() {}

func (*SMNotifications_Log) isSMNotifications_SMNotification() {}

func (*SMNotifications_RunInstancesStatus) isSMNotifications_SMNotification() {}

func (*SMNotifications_UpdateInstancesStatus) isSMNotifications_SMNotification() {}

type Monitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp          *timestamp.Timestamp  `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SystemMonitoring   *SystemMonitoring     `protobuf:"bytes,2,opt,name=system_monitoring,json=systemMonitoring,proto3" json:"system_monitoring,omitempty"`
	InstanceMonitoring []*InstanceMonitoring `protobuf:"bytes,3,rep,name=instance_monitoring,json=instanceMonitoring,proto3" json:"instance_monitoring,omitempty"`
}

func (x *Monitoring) Reset() {
	*x = Monitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Monitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monitoring) ProtoMessage() {}

func (x *Monitoring) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monitoring.ProtoReflect.Descriptor instead.
func (*Monitoring) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{26}
}

func (x *Monitoring) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Monitoring) GetSystemMonitoring() *SystemMonitoring {
	if x != nil {
		return x.SystemMonitoring
	}
	return nil
}

func (x *Monitoring) GetInstanceMonitoring() []*InstanceMonitoring {
	if x != nil {
		return x.InstanceMonitoring
	}
	return nil
}

type SystemMonitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ram        uint64 `protobuf:"varint,1,opt,name=ram,proto3" json:"ram,omitempty"`
	Cpu        uint64 `protobuf:"varint,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	UsedDisk   uint64 `protobuf:"varint,3,opt,name=used_disk,json=usedDisk,proto3" json:"used_disk,omitempty"`
	InTraffic  uint64 `protobuf:"varint,4,opt,name=in_traffic,json=inTraffic,proto3" json:"in_traffic,omitempty"`
	OutTraffic uint64 `protobuf:"varint,5,opt,name=out_traffic,json=outTraffic,proto3" json:"out_traffic,omitempty"`
}

func (x *SystemMonitoring) Reset() {
	*x = SystemMonitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMonitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMonitoring) ProtoMessage() {}

func (x *SystemMonitoring) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMonitoring.ProtoReflect.Descriptor instead.
func (*SystemMonitoring) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{27}
}

func (x *SystemMonitoring) GetRam() uint64 {
	if x != nil {
		return x.Ram
	}
	return 0
}

func (x *SystemMonitoring) GetCpu() uint64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *SystemMonitoring) GetUsedDisk() uint64 {
	if x != nil {
		return x.UsedDisk
	}
	return 0
}

func (x *SystemMonitoring) GetInTraffic() uint64 {
	if x != nil {
		return x.InTraffic
	}
	return 0
}

func (x *SystemMonitoring) GetOutTraffic() uint64 {
	if x != nil {
		return x.OutTraffic
	}
	return 0
}

type InstanceMonitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance   *InstanceIdent `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	Ram        uint64         `protobuf:"varint,2,opt,name=ram,proto3" json:"ram,omitempty"`
	Cpu        uint64         `protobuf:"varint,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	UsedDisk   uint64         `protobuf:"varint,4,opt,name=used_disk,json=usedDisk,proto3" json:"used_disk,omitempty"`
	InTraffic  uint64         `protobuf:"varint,5,opt,name=in_traffic,json=inTraffic,proto3" json:"in_traffic,omitempty"`
	OutTraffic uint64         `protobuf:"varint,6,opt,name=out_traffic,json=outTraffic,proto3" json:"out_traffic,omitempty"`
}

func (x *InstanceMonitoring) Reset() {
	*x = InstanceMonitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceMonitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceMonitoring) ProtoMessage() {}

func (x *InstanceMonitoring) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceMonitoring.ProtoReflect.Descriptor instead.
func (*InstanceMonitoring) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{28}
}

func (x *InstanceMonitoring) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *InstanceMonitoring) GetRam() uint64 {
	if x != nil {
		return x.Ram
	}
	return 0
}

func (x *InstanceMonitoring) GetCpu() uint64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *InstanceMonitoring) GetUsedDisk() uint64 {
	if x != nil {
		return x.UsedDisk
	}
	return 0
}

func (x *InstanceMonitoring) GetInTraffic() uint64 {
	if x != nil {
		return x.InTraffic
	}
	return 0
}

func (x *InstanceMonitoring) GetOutTraffic() uint64 {
	if x != nil {
		return x.OutTraffic
	}
	return 0
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Tag       string               `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	// Types that are assignable to Payload:
	//	*Alert_SystemQuotaAlert
	//	*Alert_InstanceQuotaAlert
	//	*Alert_ResourceValidateAlert
	//	*Alert_DeviceAllocateAlert
	//	*Alert_SystemAlert
	//	*Alert_CoreAlert
	//	*Alert_InstanceAlert
	Payload isAlert_Payload `protobuf_oneof:"Payload"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{29}
}

func (x *Alert) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Alert) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (m *Alert) GetPayload() isAlert_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Alert) GetSystemQuotaAlert() *SystemQuotaAlert {
	if x, ok := x.GetPayload().(*Alert_SystemQuotaAlert); ok {
		return x.SystemQuotaAlert
	}
	return nil
}

func (x *Alert) GetInstanceQuotaAlert() *InstanceQuotaAlert {
	if x, ok := x.GetPayload().(*Alert_InstanceQuotaAlert); ok {
		return x.InstanceQuotaAlert
	}
	return nil
}

func (x *Alert) GetResourceValidateAlert() *ResourceValidateAlert {
	if x, ok := x.GetPayload().(*Alert_ResourceValidateAlert); ok {
		return x.ResourceValidateAlert
	}
	return nil
}

func (x *Alert) GetDeviceAllocateAlert() *DeviceAllocateAlert {
	if x, ok := x.GetPayload().(*Alert_DeviceAllocateAlert); ok {
		return x.DeviceAllocateAlert
	}
	return nil
}

func (x *Alert) GetSystemAlert() *SystemAlert {
	if x, ok := x.GetPayload().(*Alert_SystemAlert); ok {
		return x.SystemAlert
	}
	return nil
}

func (x *Alert) GetCoreAlert() *CoreAlert {
	if x, ok := x.GetPayload().(*Alert_CoreAlert); ok {
		return x.CoreAlert
	}
	return nil
}

func (x *Alert) GetInstanceAlert() *InstanceAlert {
	if x, ok := x.GetPayload().(*Alert_InstanceAlert); ok {
		return x.InstanceAlert
	}
	return nil
}

type isAlert_Payload interface {
	isAlert_Payload()
}

type Alert_SystemQuotaAlert struct {
	SystemQuotaAlert *SystemQuotaAlert `protobuf:"bytes,3,opt,name=system_quota_alert,json=systemQuotaAlert,proto3,oneof"`
}

type Alert_InstanceQuotaAlert struct {
	InstanceQuotaAlert *InstanceQuotaAlert `protobuf:"bytes,4,opt,name=instance_quota_alert,json=instanceQuotaAlert,proto3,oneof"`
}

type Alert_ResourceValidateAlert struct {
	ResourceValidateAlert *ResourceValidateAlert `protobuf:"bytes,5,opt,name=resource_validate_alert,json=resourceValidateAlert,proto3,oneof"`
}

type Alert_DeviceAllocateAlert struct {
	DeviceAllocateAlert *DeviceAllocateAlert `protobuf:"bytes,6,opt,name=device_allocate_alert,json=deviceAllocateAlert,proto3,oneof"`
}

type Alert_SystemAlert struct {
	SystemAlert *SystemAlert `protobuf:"bytes,7,opt,name=system_alert,json=systemAlert,proto3,oneof"`
}

type Alert_CoreAlert struct {
	CoreAlert *CoreAlert `protobuf:"bytes,8,opt,name=core_alert,json=coreAlert,proto3,oneof"`
}

type Alert_InstanceAlert struct {
	InstanceAlert *InstanceAlert `protobuf:"bytes,9,opt,name=instance_alert,json=instanceAlert,proto3,oneof"`
}

func (*Alert_SystemQuotaAlert) isAlert_Payload() {}

func (*Alert_InstanceQuotaAlert) isAlert_Payload() {}

func (*Alert_ResourceValidateAlert) isAlert_Payload() {}

func (*Alert_DeviceAllocateAlert) isAlert_Payload() {}

func (*Alert_SystemAlert) isAlert_Payload() {}

func (*Alert_CoreAlert) isAlert_Payload() {}

func (*Alert_InstanceAlert) isAlert_Payload() {}

type SystemQuotaAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameter string `protobuf:"bytes,1,opt,name=parameter,proto3" json:"parameter,omitempty"`
	Value     uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SystemQuotaAlert) Reset() {
	*x = SystemQuotaAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemQuotaAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemQuotaAlert) ProtoMessage() {}

func (x *SystemQuotaAlert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemQuotaAlert.ProtoReflect.Descriptor instead.
func (*SystemQuotaAlert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{30}
}

func (x *SystemQuotaAlert) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

func (x *SystemQuotaAlert) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type InstanceQuotaAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance  *InstanceIdent `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	Parameter string         `protobuf:"bytes,2,opt,name=parameter,proto3" json:"parameter,omitempty"`
	Value     uint64         `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InstanceQuotaAlert) Reset() {
	*x = InstanceQuotaAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceQuotaAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceQuotaAlert) ProtoMessage() {}

func (x *InstanceQuotaAlert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceQuotaAlert.ProtoReflect.Descriptor instead.
func (*InstanceQuotaAlert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{31}
}

func (x *InstanceQuotaAlert) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *InstanceQuotaAlert) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

func (x *InstanceQuotaAlert) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DeviceAllocateAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *InstanceIdent `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	Device   string         `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	Message  string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeviceAllocateAlert) Reset() {
	*x = DeviceAllocateAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceAllocateAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceAllocateAlert) ProtoMessage() {}

func (x *DeviceAllocateAlert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceAllocateAlert.ProtoReflect.Descriptor instead.
func (*DeviceAllocateAlert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{32}
}

func (x *DeviceAllocateAlert) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *DeviceAllocateAlert) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DeviceAllocateAlert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResourceValidateAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*ResourceValidateErrors `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ResourceValidateAlert) Reset() {
	*x = ResourceValidateAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceValidateAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceValidateAlert) ProtoMessage() {}

func (x *ResourceValidateAlert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceValidateAlert.ProtoReflect.Descriptor instead.
func (*ResourceValidateAlert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{33}
}

func (x *ResourceValidateAlert) GetErrors() []*ResourceValidateErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ResourceValidateErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ErrorMsg []string `protobuf:"bytes,2,rep,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *ResourceValidateErrors) Reset() {
	*x = ResourceValidateErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceValidateErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceValidateErrors) ProtoMessage() {}

func (x *ResourceValidateErrors) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceValidateErrors.ProtoReflect.Descriptor instead.
func (*ResourceValidateErrors) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{34}
}

func (x *ResourceValidateErrors) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceValidateErrors) GetErrorMsg() []string {
	if x != nil {
		return x.ErrorMsg
	}
	return nil
}

type SystemAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SystemAlert) Reset() {
	*x = SystemAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemAlert) ProtoMessage() {}

func (x *SystemAlert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemAlert.ProtoReflect.Descriptor instead.
func (*SystemAlert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{35}
}

func (x *SystemAlert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CoreAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoreComponent string `protobuf:"bytes,1,opt,name=core_component,json=coreComponent,proto3" json:"core_component,omitempty"`
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CoreAlert) Reset() {
	*x = CoreAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreAlert) ProtoMessage() {}

func (x *CoreAlert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreAlert.ProtoReflect.Descriptor instead.
func (*CoreAlert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{36}
}

func (x *CoreAlert) GetCoreComponent() string {
	if x != nil {
		return x.CoreComponent
	}
	return ""
}

func (x *CoreAlert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type InstanceAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance   *InstanceIdent `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	AosVersion uint64         `protobuf:"varint,2,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	Message    string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InstanceAlert) Reset() {
	*x = InstanceAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceAlert) ProtoMessage() {}

func (x *InstanceAlert) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceAlert.ProtoReflect.Descriptor instead.
func (*InstanceAlert) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{37}
}

func (x *InstanceAlert) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *InstanceAlert) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *InstanceAlert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ErrorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AosCode  int32  `protobuf:"varint,1,opt,name=AosCode,proto3" json:"AosCode,omitempty"`
	ExitCode int32  `protobuf:"varint,2,opt,name=ExitCode,proto3" json:"ExitCode,omitempty"`
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInfo.ProtoReflect.Descriptor instead.
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{38}
}

func (x *ErrorInfo) GetAosCode() int32 {
	if x != nil {
		return x.AosCode
	}
	return 0
}

func (x *ErrorInfo) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ErrorInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ServiceError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId  string     `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	AosVersion uint64     `protobuf:"varint,2,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	ErrorInfo  *ErrorInfo `protobuf:"bytes,3,opt,name=error_info,json=errorInfo,proto3" json:"error_info,omitempty"`
}

func (x *ServiceError) Reset() {
	*x = ServiceError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceError) ProtoMessage() {}

func (x *ServiceError) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceError.ProtoReflect.Descriptor instead.
func (*ServiceError) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{39}
}

func (x *ServiceError) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceError) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *ServiceError) GetErrorInfo() *ErrorInfo {
	if x != nil {
		return x.ErrorInfo
	}
	return nil
}

type InstanceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance      *InstanceIdent `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	AosVersion    uint64         `protobuf:"varint,2,opt,name=aos_version,json=aosVersion,proto3" json:"aos_version,omitempty"`
	StateChecksum string         `protobuf:"bytes,3,opt,name=state_checksum,json=stateChecksum,proto3" json:"state_checksum,omitempty"`
	RunState      string         `protobuf:"bytes,4,opt,name=run_state,json=runState,proto3" json:"run_state,omitempty"`
	ErrorInfo     *ErrorInfo     `protobuf:"bytes,5,opt,name=error_info,json=errorInfo,proto3" json:"error_info,omitempty"`
}

func (x *InstanceStatus) Reset() {
	*x = InstanceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceStatus) ProtoMessage() {}

func (x *InstanceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceStatus.ProtoReflect.Descriptor instead.
func (*InstanceStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{40}
}

func (x *InstanceStatus) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *InstanceStatus) GetAosVersion() uint64 {
	if x != nil {
		return x.AosVersion
	}
	return 0
}

func (x *InstanceStatus) GetStateChecksum() string {
	if x != nil {
		return x.StateChecksum
	}
	return ""
}

func (x *InstanceStatus) GetRunState() string {
	if x != nil {
		return x.RunState
	}
	return ""
}

func (x *InstanceStatus) GetErrorInfo() *ErrorInfo {
	if x != nil {
		return x.ErrorInfo
	}
	return nil
}

type UpdateInstancesStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []*InstanceStatus `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *UpdateInstancesStatus) Reset() {
	*x = UpdateInstancesStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstancesStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstancesStatus) ProtoMessage() {}

func (x *UpdateInstancesStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstancesStatus.ProtoReflect.Descriptor instead.
func (*UpdateInstancesStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateInstancesStatus) GetInstances() []*InstanceStatus {
	if x != nil {
		return x.Instances
	}
	return nil
}

type RunInstancesStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitSubjects  []string          `protobuf:"bytes,1,rep,name=unit_subjects,json=unitSubjects,proto3" json:"unit_subjects,omitempty"`
	Instances     []*InstanceStatus `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
	ErrorServices []*ServiceError   `protobuf:"bytes,3,rep,name=error_services,json=errorServices,proto3" json:"error_services,omitempty"`
}

func (x *RunInstancesStatus) Reset() {
	*x = RunInstancesStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunInstancesStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInstancesStatus) ProtoMessage() {}

func (x *RunInstancesStatus) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInstancesStatus.ProtoReflect.Descriptor instead.
func (*RunInstancesStatus) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{42}
}

func (x *RunInstancesStatus) GetUnitSubjects() []string {
	if x != nil {
		return x.UnitSubjects
	}
	return nil
}

func (x *RunInstancesStatus) GetInstances() []*InstanceStatus {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *RunInstancesStatus) GetErrorServices() []*ServiceError {
	if x != nil {
		return x.ErrorServices
	}
	return nil
}

type SystemLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId string               `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	From  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Till  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=till,proto3" json:"till,omitempty"`
}

func (x *SystemLogRequest) Reset() {
	*x = SystemLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemLogRequest) ProtoMessage() {}

func (x *SystemLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemLogRequest.ProtoReflect.Descriptor instead.
func (*SystemLogRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{43}
}

func (x *SystemLogRequest) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *SystemLogRequest) GetFrom() *timestamp.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *SystemLogRequest) GetTill() *timestamp.Timestamp {
	if x != nil {
		return x.Till
	}
	return nil
}

type InstanceLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId    string               `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	Instance *InstanceIdent       `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	From     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Till     *timestamp.Timestamp `protobuf:"bytes,4,opt,name=till,proto3" json:"till,omitempty"`
}

func (x *InstanceLogRequest) Reset() {
	*x = InstanceLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceLogRequest) ProtoMessage() {}

func (x *InstanceLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceLogRequest.ProtoReflect.Descriptor instead.
func (*InstanceLogRequest) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{44}
}

func (x *InstanceLogRequest) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *InstanceLogRequest) GetInstance() *InstanceIdent {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *InstanceLogRequest) GetFrom() *timestamp.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *InstanceLogRequest) GetTill() *timestamp.Timestamp {
	if x != nil {
		return x.Till
	}
	return nil
}

type LogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId     string `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	PartCount uint64 `protobuf:"varint,2,opt,name=part_count,json=partCount,proto3" json:"part_count,omitempty"`
	Part      uint64 `protobuf:"varint,3,opt,name=part,proto3" json:"part,omitempty"`
	Data      []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Error     string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LogData) Reset() {
	*x = LogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogData) ProtoMessage() {}

func (x *LogData) ProtoReflect() protoreflect.Message {
	mi := &file_servicemanager_v2_servicemanager_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogData.ProtoReflect.Descriptor instead.
func (*LogData) Descriptor() ([]byte, []int) {
	return file_servicemanager_v2_servicemanager_proto_rawDescGZIP(), []int{45}
}

func (x *LogData) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *LogData) GetPartCount() uint64 {
	if x != nil {
		return x.PartCount
	}
	return 0
}

func (x *LogData) GetPart() uint64 {
	if x != nil {
		return x.Part
	}
	return 0
}

func (x *LogData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LogData) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_servicemanager_v2_servicemanager_proto protoreflect.FileDescriptor

var file_servicemanager_v2_servicemanager_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x0b, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3a, 0x0a, 0x11, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6f, 0x73, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61,
	0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x97, 0x02, 0x0a, 0x15, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x57, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6f,
	0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x14, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x77, 0x0a, 0x12, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6e,
	0x75, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x13, 0x52,
	0x75, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x43, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x6e, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8a, 0x01, 0x0a, 0x0d,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4a, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x5e, 0x0a, 0x16, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44,
	0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x52, 0x07, 0x65, 0x6e, 0x76,
	0x56, 0x61, 0x72, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12,
	0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x0a,
	0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73,
	0x22, 0x6d, 0x0a, 0x0a, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15,
	0x0a, 0x06, 0x76, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x2c, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22,
	0x67, 0x0a, 0x14, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4f, 0x0a, 0x0f, 0x65, 0x6e, 0x76, 0x5f, 0x76,
	0x61, 0x72, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x56, 0x61,
	0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x45, 0x6e, 0x76,
	0x56, 0x61, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x40, 0x0a, 0x0b, 0x76, 0x61, 0x72, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x76, 0x61, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x3b, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x46,
	0x0a, 0x0c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36,
	0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x88, 0x02, 0x0a, 0x13, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x35,
	0x31, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x22, 0x2d, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x22, 0xbb, 0x04, 0x0a, 0x0f, 0x53, 0x4d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x00, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x5f, 0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x6e, 0x65, 0x77,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x65,
	0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e,
	0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x59,
	0x0a, 0x14, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x12, 0x72, 0x75, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x62, 0x0a, 0x17, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x10, 0x0a,
	0x0e, 0x53, 0x4d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xf0, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x56, 0x0a, 0x13, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x12,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x64, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x5f, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x22, 0xd3, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x72, 0x61, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x70,
	0x75, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x22, 0x9f,
	0x05, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x12, 0x53, 0x0a, 0x12, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00,
	0x52, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x12, 0x62, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x00, 0x52, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x5c, 0x0a, 0x15, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x00, 0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52,
	0x09, 0x63, 0x6f, 0x72, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x49, 0x0a, 0x0e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x46, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12,
	0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5a, 0x0a, 0x15, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x48, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22,
	0x27, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x09, 0x43, 0x6f, 0x72, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6f, 0x73, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6f, 0x73,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x5b, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x6f, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x41, 0x6f, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x69, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x45, 0x78, 0x69, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8b,
	0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x3b, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf0, 0x01, 0x0a,
	0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x61, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x58, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x12, 0x52, 0x75,
	0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x6e, 0x69, 0x74, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x89,
	0x01, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69,
	0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x6c, 0x22, 0xc9, 0x01, 0x0a, 0x12, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x74, 0x69, 0x6c, 0x6c, 0x22, 0x7d, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xcb, 0x0c, 0x0a, 0x09, 0x53, 0x4d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x10, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x17, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x67, 0x0a, 0x0f, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e,
	0x76, 0x56, 0x61, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x76,
	0x56, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0c, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a,
	0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x4d, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x4d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x61, 0x73, 0x68, 0x4c,
	0x6f, 0x67, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_servicemanager_v2_servicemanager_proto_rawDescOnce sync.Once
	file_servicemanager_v2_servicemanager_proto_rawDescData = file_servicemanager_v2_servicemanager_proto_rawDesc
)

func file_servicemanager_v2_servicemanager_proto_rawDescGZIP() []byte {
	file_servicemanager_v2_servicemanager_proto_rawDescOnce.Do(func() {
		file_servicemanager_v2_servicemanager_proto_rawDescData = protoimpl.X.CompressGZIP(file_servicemanager_v2_servicemanager_proto_rawDescData)
	})
	return file_servicemanager_v2_servicemanager_proto_rawDescData
}

var file_servicemanager_v2_servicemanager_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_servicemanager_v2_servicemanager_proto_goTypes = []interface{}{
	(*BoardConfig)(nil),            // 0: servicemanager.v2.BoardConfig
	(*BoardConfigStatus)(nil),      // 1: servicemanager.v2.BoardConfigStatus
	(*ServicesStatus)(nil),         // 2: servicemanager.v2.ServicesStatus
	(*ServiceStatus)(nil),          // 3: servicemanager.v2.ServiceStatus
	(*InstallServiceRequest)(nil),  // 4: servicemanager.v2.InstallServiceRequest
	(*RestoreServiceRequest)(nil),  // 5: servicemanager.v2.RestoreServiceRequest
	(*RemoveServiceRequest)(nil),   // 6: servicemanager.v2.RemoveServiceRequest
	(*RunInstanceRequest)(nil),     // 7: servicemanager.v2.RunInstanceRequest
	(*RunInstancesRequest)(nil),    // 8: servicemanager.v2.RunInstancesRequest
	(*InstanceIdent)(nil),          // 9: servicemanager.v2.InstanceIdent
	(*InstanceStateRequest)(nil),   // 10: servicemanager.v2.InstanceStateRequest
	(*StateAcceptance)(nil),        // 11: servicemanager.v2.StateAcceptance
	(*InstanceState)(nil),          // 12: servicemanager.v2.InstanceState
	(*NewInstanceState)(nil),       // 13: servicemanager.v2.NewInstanceState
	(*OverrideEnvVarsRequest)(nil), // 14: servicemanager.v2.OverrideEnvVarsRequest
	(*OverrideInstanceEnvVar)(nil), // 15: servicemanager.v2.OverrideInstanceEnvVar
	(*EnvVarInfo)(nil),             // 16: servicemanager.v2.EnvVarInfo
	(*OverrideEnvVarStatus)(nil),   // 17: servicemanager.v2.OverrideEnvVarStatus
	(*EnvVarInstanceStatus)(nil),   // 18: servicemanager.v2.EnvVarInstanceStatus
	(*EnvVarStatus)(nil),           // 19: servicemanager.v2.EnvVarStatus
	(*LayersStatus)(nil),           // 20: servicemanager.v2.LayersStatus
	(*LayerStatus)(nil),            // 21: servicemanager.v2.LayerStatus
	(*InstallLayerRequest)(nil),    // 22: servicemanager.v2.InstallLayerRequest
	(*RemoveLayerRequest)(nil),     // 23: servicemanager.v2.RemoveLayerRequest
	(*RestoreLayerRequest)(nil),    // 24: servicemanager.v2.RestoreLayerRequest
	(*SMNotifications)(nil),        // 25: servicemanager.v2.SMNotifications
	(*Monitoring)(nil),             // 26: servicemanager.v2.Monitoring
	(*SystemMonitoring)(nil),       // 27: servicemanager.v2.SystemMonitoring
	(*InstanceMonitoring)(nil),     // 28: servicemanager.v2.InstanceMonitoring
	(*Alert)(nil),                  // 29: servicemanager.v2.Alert
	(*SystemQuotaAlert)(nil),       // 30: servicemanager.v2.SystemQuotaAlert
	(*InstanceQuotaAlert)(nil),     // 31: servicemanager.v2.InstanceQuotaAlert
	(*DeviceAllocateAlert)(nil),    // 32: servicemanager.v2.DeviceAllocateAlert
	(*ResourceValidateAlert)(nil),  // 33: servicemanager.v2.ResourceValidateAlert
	(*ResourceValidateErrors)(nil), // 34: servicemanager.v2.ResourceValidateErrors
	(*SystemAlert)(nil),            // 35: servicemanager.v2.SystemAlert
	(*CoreAlert)(nil),              // 36: servicemanager.v2.CoreAlert
	(*InstanceAlert)(nil),          // 37: servicemanager.v2.InstanceAlert
	(*ErrorInfo)(nil),              // 38: servicemanager.v2.ErrorInfo
	(*ServiceError)(nil),           // 39: servicemanager.v2.ServiceError
	(*InstanceStatus)(nil),         // 40: servicemanager.v2.InstanceStatus
	(*UpdateInstancesStatus)(nil),  // 41: servicemanager.v2.UpdateInstancesStatus
	(*RunInstancesStatus)(nil),     // 42: servicemanager.v2.RunInstancesStatus
	(*SystemLogRequest)(nil),       // 43: servicemanager.v2.SystemLogRequest
	(*InstanceLogRequest)(nil),     // 44: servicemanager.v2.InstanceLogRequest
	(*LogData)(nil),                // 45: servicemanager.v2.LogData
	(*timestamp.Timestamp)(nil),    // 46: google.protobuf.Timestamp
	(*empty.Empty)(nil),            // 47: google.protobuf.Empty
}
var file_servicemanager_v2_servicemanager_proto_depIdxs = []int32{
	3,  // 0: servicemanager.v2.ServicesStatus.services:type_name -> servicemanager.v2.ServiceStatus
	7,  // 1: servicemanager.v2.RunInstancesRequest.instances:type_name -> servicemanager.v2.RunInstanceRequest
	9,  // 2: servicemanager.v2.InstanceStateRequest.instance:type_name -> servicemanager.v2.InstanceIdent
	9,  // 3: servicemanager.v2.StateAcceptance.instance:type_name -> servicemanager.v2.InstanceIdent
	9,  // 4: servicemanager.v2.InstanceState.instance:type_name -> servicemanager.v2.InstanceIdent
	12, // 5: servicemanager.v2.NewInstanceState.state:type_name -> servicemanager.v2.InstanceState
	15, // 6: servicemanager.v2.OverrideEnvVarsRequest.env_vars:type_name -> servicemanager.v2.OverrideInstanceEnvVar
	9,  // 7: servicemanager.v2.OverrideInstanceEnvVar.instance:type_name -> servicemanager.v2.InstanceIdent
	16, // 8: servicemanager.v2.OverrideInstanceEnvVar.vars:type_name -> servicemanager.v2.EnvVarInfo
	46, // 9: servicemanager.v2.EnvVarInfo.ttl:type_name -> google.protobuf.Timestamp
	18, // 10: servicemanager.v2.OverrideEnvVarStatus.env_vars_status:type_name -> servicemanager.v2.EnvVarInstanceStatus
	9,  // 11: servicemanager.v2.EnvVarInstanceStatus.instance:type_name -> servicemanager.v2.InstanceIdent
	19, // 12: servicemanager.v2.EnvVarInstanceStatus.vars_status:type_name -> servicemanager.v2.EnvVarStatus
	21, // 13: servicemanager.v2.LayersStatus.layers:type_name -> servicemanager.v2.LayerStatus
	26, // 14: servicemanager.v2.SMNotifications.monitoring:type_name -> servicemanager.v2.Monitoring
	29, // 15: servicemanager.v2.SMNotifications.alert:type_name -> servicemanager.v2.Alert
	10, // 16: servicemanager.v2.SMNotifications.instance_state_request:type_name -> servicemanager.v2.InstanceStateRequest
	13, // 17: servicemanager.v2.SMNotifications.new_instance_state:type_name -> servicemanager.v2.NewInstanceState
	45, // 18: servicemanager.v2.SMNotifications.log:type_name -> servicemanager.v2.LogData
	42, // 19: servicemanager.v2.SMNotifications.run_instances_status:type_name -> servicemanager.v2.RunInstancesStatus
	41, // 20: servicemanager.v2.SMNotifications.update_instances_status:type_name -> servicemanager.v2.UpdateInstancesStatus
	46, // 21: servicemanager.v2.Monitoring.timestamp:type_name -> google.protobuf.Timestamp
	27, // 22: servicemanager.v2.Monitoring.system_monitoring:type_name -> servicemanager.v2.SystemMonitoring
	28, // 23: servicemanager.v2.Monitoring.instance_monitoring:type_name -> servicemanager.v2.InstanceMonitoring
	9,  // 24: servicemanager.v2.InstanceMonitoring.instance:type_name -> servicemanager.v2.InstanceIdent
	46, // 25: servicemanager.v2.Alert.timestamp:type_name -> google.protobuf.Timestamp
	30, // 26: servicemanager.v2.Alert.system_quota_alert:type_name -> servicemanager.v2.SystemQuotaAlert
	31, // 27: servicemanager.v2.Alert.instance_quota_alert:type_name -> servicemanager.v2.InstanceQuotaAlert
	33, // 28: servicemanager.v2.Alert.resource_validate_alert:type_name -> servicemanager.v2.ResourceValidateAlert
	32, // 29: servicemanager.v2.Alert.device_allocate_alert:type_name -> servicemanager.v2.DeviceAllocateAlert
	35, // 30: servicemanager.v2.Alert.system_alert:type_name -> servicemanager.v2.SystemAlert
	36, // 31: servicemanager.v2.Alert.core_alert:type_name -> servicemanager.v2.CoreAlert
	37, // 32: servicemanager.v2.Alert.instance_alert:type_name -> servicemanager.v2.InstanceAlert
	9,  // 33: servicemanager.v2.InstanceQuotaAlert.instance:type_name -> servicemanager.v2.InstanceIdent
	9,  // 34: servicemanager.v2.DeviceAllocateAlert.instance:type_name -> servicemanager.v2.InstanceIdent
	34, // 35: servicemanager.v2.ResourceValidateAlert.errors:type_name -> servicemanager.v2.ResourceValidateErrors
	9,  // 36: servicemanager.v2.InstanceAlert.instance:type_name -> servicemanager.v2.InstanceIdent
	38, // 37: servicemanager.v2.ServiceError.error_info:type_name -> servicemanager.v2.ErrorInfo
	9,  // 38: servicemanager.v2.InstanceStatus.instance:type_name -> servicemanager.v2.InstanceIdent
	38, // 39: servicemanager.v2.InstanceStatus.error_info:type_name -> servicemanager.v2.ErrorInfo
	40, // 40: servicemanager.v2.UpdateInstancesStatus.instances:type_name -> servicemanager.v2.InstanceStatus
	40, // 41: servicemanager.v2.RunInstancesStatus.instances:type_name -> servicemanager.v2.InstanceStatus
	39, // 42: servicemanager.v2.RunInstancesStatus.error_services:type_name -> servicemanager.v2.ServiceError
	46, // 43: servicemanager.v2.SystemLogRequest.from:type_name -> google.protobuf.Timestamp
	46, // 44: servicemanager.v2.SystemLogRequest.till:type_name -> google.protobuf.Timestamp
	9,  // 45: servicemanager.v2.InstanceLogRequest.instance:type_name -> servicemanager.v2.InstanceIdent
	46, // 46: servicemanager.v2.InstanceLogRequest.from:type_name -> google.protobuf.Timestamp
	46, // 47: servicemanager.v2.InstanceLogRequest.till:type_name -> google.protobuf.Timestamp
	47, // 48: servicemanager.v2.SMService.GetBoardConfigStatus:input_type -> google.protobuf.Empty
	0,  // 49: servicemanager.v2.SMService.CheckBoardConfig:input_type -> servicemanager.v2.BoardConfig
	0,  // 50: servicemanager.v2.SMService.SetBoardConfig:input_type -> servicemanager.v2.BoardConfig
	47, // 51: servicemanager.v2.SMService.GetServicesStatus:input_type -> google.protobuf.Empty
	4,  // 52: servicemanager.v2.SMService.InstallService:input_type -> servicemanager.v2.InstallServiceRequest
	5,  // 53: servicemanager.v2.SMService.RestoreService:input_type -> servicemanager.v2.RestoreServiceRequest
	6,  // 54: servicemanager.v2.SMService.RemoveService:input_type -> servicemanager.v2.RemoveServiceRequest
	8,  // 55: servicemanager.v2.SMService.RunInstances:input_type -> servicemanager.v2.RunInstancesRequest
	11, // 56: servicemanager.v2.SMService.InstanceStateAcceptance:input_type -> servicemanager.v2.StateAcceptance
	12, // 57: servicemanager.v2.SMService.SetInstanceState:input_type -> servicemanager.v2.InstanceState
	14, // 58: servicemanager.v2.SMService.OverrideEnvVars:input_type -> servicemanager.v2.OverrideEnvVarsRequest
	47, // 59: servicemanager.v2.SMService.GetLayersStatus:input_type -> google.protobuf.Empty
	22, // 60: servicemanager.v2.SMService.InstallLayer:input_type -> servicemanager.v2.InstallLayerRequest
	23, // 61: servicemanager.v2.SMService.RemoveLayer:input_type -> servicemanager.v2.RemoveLayerRequest
	24, // 62: servicemanager.v2.SMService.RestoreLayer:input_type -> servicemanager.v2.RestoreLayerRequest
	47, // 63: servicemanager.v2.SMService.SubscribeSMNotifications:input_type -> google.protobuf.Empty
	43, // 64: servicemanager.v2.SMService.GetSystemLog:input_type -> servicemanager.v2.SystemLogRequest
	44, // 65: servicemanager.v2.SMService.GetInstanceLog:input_type -> servicemanager.v2.InstanceLogRequest
	44, // 66: servicemanager.v2.SMService.GetInstanceCrashLog:input_type -> servicemanager.v2.InstanceLogRequest
	1,  // 67: servicemanager.v2.SMService.GetBoardConfigStatus:output_type -> servicemanager.v2.BoardConfigStatus
	47, // 68: servicemanager.v2.SMService.CheckBoardConfig:output_type -> google.protobuf.Empty
	47, // 69: servicemanager.v2.SMService.SetBoardConfig:output_type -> google.protobuf.Empty
	2,  // 70: servicemanager.v2.SMService.GetServicesStatus:output_type -> servicemanager.v2.ServicesStatus
	47, // 71: servicemanager.v2.SMService.InstallService:output_type -> google.protobuf.Empty
	47, // 72: servicemanager.v2.SMService.RestoreService:output_type -> google.protobuf.Empty
	47, // 73: servicemanager.v2.SMService.RemoveService:output_type -> google.protobuf.Empty
	47, // 74: servicemanager.v2.SMService.RunInstances:output_type -> google.protobuf.Empty
	47, // 75: servicemanager.v2.SMService.InstanceStateAcceptance:output_type -> google.protobuf.Empty
	47, // 76: servicemanager.v2.SMService.SetInstanceState:output_type -> google.protobuf.Empty
	17, // 77: servicemanager.v2.SMService.OverrideEnvVars:output_type -> servicemanager.v2.OverrideEnvVarStatus
	20, // 78: servicemanager.v2.SMService.GetLayersStatus:output_type -> servicemanager.v2.LayersStatus
	47, // 79: servicemanager.v2.SMService.InstallLayer:output_type -> google.protobuf.Empty
	47, // 80: servicemanager.v2.SMService.RemoveLayer:output_type -> google.protobuf.Empty
	47, // 81: servicemanager.v2.SMService.RestoreLayer:output_type -> google.protobuf.Empty
	25, // 82: servicemanager.v2.SMService.SubscribeSMNotifications:output_type -> servicemanager.v2.SMNotifications
	47, // 83: servicemanager.v2.SMService.GetSystemLog:output_type -> google.protobuf.Empty
	47, // 84: servicemanager.v2.SMService.GetInstanceLog:output_type -> google.protobuf.Empty
	47, // 85: servicemanager.v2.SMService.GetInstanceCrashLog:output_type -> google.protobuf.Empty
	67, // [67:86] is the sub-list for method output_type
	48, // [48:67] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_servicemanager_v2_servicemanager_proto_init() }
func file_servicemanager_v2_servicemanager_proto_init() {
	if File_servicemanager_v2_servicemanager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_servicemanager_v2_servicemanager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoardConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoardConfigStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicesStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceIdent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateAcceptance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewInstanceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideEnvVarsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideInstanceEnvVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvVarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideEnvVarStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvVarInstanceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvVarStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayersStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMNotifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Monitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMonitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceMonitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemQuotaAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceQuotaAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceAllocateAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceValidateAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceValidateErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstancesStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunInstancesStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicemanager_v2_servicemanager_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_servicemanager_v2_servicemanager_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*SMNotifications_Monitoring)(nil),
		(*SMNotifications_Alert)(nil),
		(*SMNotifications_InstanceStateRequest)(nil),
		(*SMNotifications_NewInstanceState)(nil),
		(*SMNotifications_Log)(nil),
		(*SMNotifications_RunInstancesStatus)(nil),
		(*SMNotifications_UpdateInstancesStatus)(nil),
	}
	file_servicemanager_v2_servicemanager_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*Alert_SystemQuotaAlert)(nil),
		(*Alert_InstanceQuotaAlert)(nil),
		(*Alert_ResourceValidateAlert)(nil),
		(*Alert_DeviceAllocateAlert)(nil),
		(*Alert_SystemAlert)(nil),
		(*Alert_CoreAlert)(nil),
		(*Alert_InstanceAlert)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_servicemanager_v2_servicemanager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_servicemanager_v2_servicemanager_proto_goTypes,
		DependencyIndexes: file_servicemanager_v2_servicemanager_proto_depIdxs,
		MessageInfos:      file_servicemanager_v2_servicemanager_proto_msgTypes,
	}.Build()
	File_servicemanager_v2_servicemanager_proto = out.File
	file_servicemanager_v2_servicemanager_proto_rawDesc = nil
	file_servicemanager_v2_servicemanager_proto_goTypes = nil
	file_servicemanager_v2_servicemanager_proto_depIdxs = nil
}
